#--------------------------------------------------------------
# module variables(aws_cloudwatch_event_rule)
#--------------------------------------------------------------
variable "aws_cloudwatch_event_rule" {
  type = object(
    {
      name = string
      #   name_prefix         = string
      schedule_expression = string
      #   event_bus_name      = string
      event_pattern = string
      description   = string
      role_arn      = string
      is_enabled    = bool
    }
  )
  description = "(Required) aws_cloudwatch_event_rule."
  default     = null
}
#--------------------------------------------------------------
# module variables(aws_cloudwatch_event_target)
#--------------------------------------------------------------
variable "aws_cloudwatch_event_target" {
  type = object(
    {
      #   rule                = string
      event_bus_name      = string
      target_id           = string
      arn                 = string
      input               = string
      input_path          = string
      role_arn            = string
      run_command_targets = list(any)
      ecs_target          = list(any)
      batch_target        = list(any)
      kinesis_target      = list(any)
      sqs_target          = list(any)
      input_transformer   = list(any)
      retry_policy        = list(any)
      dead_letter_config  = list(any)
    }
  )
  description = "(Required) aws_cloudwatch_event_target."
  default     = null
}

#--------------------------------------------------------------
# module variables(aws_lambda_permission)
#--------------------------------------------------------------
# variable "event_source_token" {
#   type        = string
#   description = "(Optional) The Event Source Token to validate. Used with Alexa Skills."
#   default     = null
# }
variable "function_name" {
  type        = string
  description = "(Required) Name of the Lambda function whose resource policy you are updating"
  default     = null
}
# variable "principal" {
#   type        = string
#   description = "(Required) The principal who is getting this permission. e.g. s3.amazonaws.com, an AWS account ID, or any valid AWS service principal such as events.amazonaws.com or sns.amazonaws.com."
#   default     = "events.amazonaws.com"
# }
variable "qualifier" {
  type        = string
  description = "(Optional) Query parameter to specify function version or alias name. The permission will then apply to the specific qualified ARN. e.g. arn:aws:lambda:aws-region:acct-id:function:function-name:2"
  default     = null
}
# variable "source_account" {
#   type        = string
#   description = "(Optional) This parameter is used for S3 and SES. The AWS account ID (without a hyphen) of the source owner."
#   default     = null
# }
# variable "source_arn" {
#   type        = string
#   description = "(Optional) When granting Amazon S3 or CloudWatch Events permission to invoke your function, you should specify this field with the Amazon Resource Name (ARN) for the S3 Bucket or CloudWatch Events Rule as its value. This ensures that only events generated from the specified bucket or rule can invoke the function. API Gateway ARNs have a unique structure described here."
#   default     = null
# }
# variable "statement_id" {
#   type        = string
#   description = "(Optional) A unique statement identifier. By default generated by Terraform."
#   default     = null
# }
# variable "statement_id_prefix" {
#   type        = string
#   description = "(Optional) A statement identifier prefix. Terraform will generate a unique suffix. Conflicts with statement_id."
#   default     = null
# }
variable "tags" {
  type        = map(any)
  description = "tags - (Optional) A mapping of tags to assign to the resource."
  default     = null
}
