#--------------------------------------------------------------
# module variables
#--------------------------------------------------------------
variable "is_enabled" {
  type        = bool
  description = "(Optional) A boolean flag to enable/disable Lambda Permission. Defaults true."
  default     = true
}
variable "aws_lambda_permission" {
  type = object(
    {
      # The AWS Lambda action you want to allow in this statement. (e.g. lambda:InvokeFunction)
      action = string
      # The Event Source Token to validate. Used with Alexa Skills.
      event_source_token = string
      # Name of the Lambda function whose resource policy you are updating
      function_name = string
      # The principal who is getting this permission. e.g. s3.amazonaws.com, an AWS account ID, or any valid AWS service principal such as events.amazonaws.com or sns.amazonaws.com.
      principal = string
      # Query parameter to specify function version or alias name. The permission will then apply to the specific qualified ARN. e.g. arn:aws:lambda:aws-region:acct-id:function:function-name:2
      qualifier = string
      # This parameter is used for S3 and SES. The AWS account ID (without a hyphen) of the source owner.
      source_account = string
      # When the principal is an AWS service, the ARN of the specific resource within that service to grant permission to. Without this, any resource from principal will be granted permission â€“ even if that resource is from another account. For S3, this should be the ARN of the S3 Bucket. For CloudWatch Events, this should be the ARN of the CloudWatch Events Rule. For API Gateway, this should be the ARN of the API, as described here.
      source_arn = string
      # A unique statement identifier. By default generated by Terraform.
      statement_id = string
      # A statement identifier prefix. Terraform will generate a unique suffix. Conflicts with statement_id.
      statement_id_prefix = string
    }
  )
  description = "(Required) The aws_lambda_permission."
}
